# 01. HTTP 헤더 개요

* HTTP 헤더
-  header-field = field-name ":" OWS field-value OWS (OWS: 띄어쓰기 허용)

* HTTP 헤더 용도
- HTTP 전송에 필요한 모든 부가정보
- 예) 메시지 바디의 내용, 메시지 바디의 크기, 압축, 인증, 요청 클라이언트, 서버 정보, 캐시 관리 정보 등
- 표준 헤더가 너무 많음
- 필요시 임의의 헤더 추가 가능 : helloworld: hihi

* 분류 - RFC2616(과거)
- 헤더 분류
  - General 헤더 : 메시지 전체에 적용되는 정보(요청 메시지, 응답 메시지 구분 없이 전체) / 예) Connection: close
  - Request 헤더 : 요청 정보 / 예) User-Agent: Mozilla/5.0 (Macintosh;..)
  - Response 헤더 : 응답 정보, 요청을 받아 처리하는 서버 정보 / 예) Server: Apache
  - Entity 헤더 : 엔티티 바디 정보 / 예) Content-Type: text/html, Content-Length: 3423

* HTTP BODY: message body - RFC2616(과거)
- 메시지 본문(message body)은 엔티티 본문(entity body)을 전달하는데 사용
- 엔티티 본문은 요청이나 응답에서 전달할 실제 데이터, 메시지 본문 안에 엔티티 본문을 담아서 전달
- "엔티티 헤더"는 "엔티티 본문"의 데이터를 해석할 수 있는 정보 제공
  - 데이터 유형(html, json), 데이터 길이, 압축 정보 등등

** 1999년 RFC2616 폐기 => 2014년 RFC7230 ~ 7235 등장

* RFC723x 변화
- 엔티티(Entity) => 표현(Representation)
- Representation = representation MetaData + Representation Data
- 표현 = 표현 메타데이터 + 표현 데이터

* HTTP BODY: message body - RFC7230(최신)
- 메시지 본문(message body)을 통해 표현 데이터 전달
- 메시지 본문 = 페이로드(payload)
- "표현"은 요청이나 응답에서 전달할 실제 데이터
- "표현 헤더는 표현 데이터"를 해석할 수 있는 정보 제공
  - 데이터 유형(html, json), 데이터 길이, 압축 정보 등등
- 참고 : 표현 헤더는 표현 메타데이터와 페이로드 메시지를 구분해야 하지만, 여기서는 생략


# 02. 표현

* 표현
회원이라는 리소스를 HTML이라는 표현으로 전달할건지? JSON이라는 표현으로 전달할건지?

- Content-Type: 표현 데이터의 형식
- Content-Encoding: 표현 데이터의 압축 방식
- Content-Language: 표현 데이터의 자연 언어
- Content-Length: 표현 데이터의 길이 => 명확하게 표현 헤더보다는 페이로드 헤더
* 표현 헤더는 전송, 응답 둘다 사용 가능

1) Content-type - 표현 데이터의 형식 설명
- 미디어 타입, 문자 인코딩
- Content body에 들어가는 내용이 어떤 표현방식인지?
- 예) text/html; charset=utf-8, applicaiton/json, image/png

2) Content-Encoding - 표현 데이터 인코딩
- 표현 데이터를 압축하기 위해 사용
- 데이터를 전달하는 곳에서 압축 후 인코딩 헤더 추가 (gzip) / 서버에서 압축을 해서 클라이언트로 보냄 / 클라이언트는 어떤걸로 압축되어 있는지 알아야 함
- 데이터를 읽는 쪽에서 인코딩 헤더의 정보로 압축 해제 / 예) gzip, deflate, identity(압축 안함)
3) Content-Language - 표현 데이터의 자연 언어
- 표현 데이터의 자연 언어를 표현 / 예) ko, en, en-US

4) Content-Length - 표현 데이터의 길이
- 바이트 단위
- Transfer-Encoidng(전송 코딩)을 사용하면 Content-Length를 사용하면 안됨


# 03. 콘텐츠 협상



# 04. 전송 방식

# 05. 일반 정보



# 06. 특별한 정보



# 07. 인증


# 08. 쿠키